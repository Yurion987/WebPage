@using daco3.Models;
@{
    ViewBag.Title = "ZaznamPodrobne";
    Layout = "~/Views/Shared/MojBlbyLayout.cshtml";
    var grid = new WebGrid(canPage: false, rowsPerPage: 15);
    grid.Bind(source: Model, rowCount: ViewBag.TotalRowSingleDay, autoSortAndPage: false);
}

<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


@model List<GridTabulka>
<style>
    #table {
        margin-top: 100px;
    }

    .table td {
        width: 25%;
    }
</style>


<div id="table" class="row">

    <input type="button" id="opener" value="Novy Zaznam">
    @grid.GetHtml(tableStyle: "table table-responsive table-bordered table-hover",
                          columns: grid.Columns(
                         grid.Column(columnName: "Meno", header: "Meno"),
                         grid.Column(columnName: "Datum", header: "Datum"),
                         grid.Column(header: "Cas", format: @<text> <div class="editDate" data-id="@item.ZaznamId" data-propertyname="Cas">@item.Cas</div>  </text>),
                                 grid.Column(columnName: "Typ", header: "Typ", format: @<text>  @if (item.Typ == "P")
                                                {
                                        <div class="edit" data-id="@item.ZaznamId" data-propertyname="Typ">Prichod</div>
                                                }
                                                else
                                                {
                                        <div class="edit" data-id="@item.ZaznamId" data-propertyname="Typ">Odchod</div>
                                                }                              
                                </text>
                                     ), grid.Column(header: "Delete", format: @<text> @if (item.WebId == null) { <button value="@item.ZaznamId" class="delButton">Delete</button> } else { <div> Systemový Záznam</div>}  </text>,canSort:false)
                   )
                                                                                                                                                                                                                                                                                                                                                                                                                          )
</div>



<div id="dialog-modal" title="Formular">
    @using (Ajax.BeginForm("NovyZaznam", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Kontrola" }))
    {
        <div>

            <fieldset>

                <h4>Uzivatel: @Model.Last().Meno </h4>
                <h4>Den: @Model.Last().Datum </h4>

                @Html.Hidden("zaznamId", Model.Last().ZaznamId)
                <div class="editor-label">
                    @Html.LabelFor(m => m.Last().Typ)
                </div>
                <div class="editor-label">
                    @Html.DropDownList("zaznamTyp", new List<SelectListItem> {
                                                                                new SelectListItem {Text = "Odchod",Value="O" },
                                                                                new SelectListItem {Text = "Prichod",Value="P" }
                                                                              }, "Typ dochadzky")
                </div>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Last().Cas)
                </div>
                <div class="editor-label">
                    @Html.TextBox("zaznamCas", "00:00", new { @class = "casPick" })
                </div>

                <input id="vytvorNovy" type="submit" value="Uloz" />
            </fieldset>
        </div>
    }
</div>

@section scripts{
    
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>

    <script src="~/Scripts/jquery-3.0.0.min.js"></script>
    <script>



        function Kontrola(data) {
            if (data.success) {
                alert("Úspešne vytvorený")
                location.reload();
            } else {
                alert(data.nameError);
            }

        }
        $(document).ready(function () {
            //kalendar styl
            $('.casPick').datetimepicker({
                hourMin: 6,
                hourMax: 17,
                controlType: 'select',
                timeOnly: true,
                format: 'H:m'

            });
            //InLine Editing typ
            var oldValue = '';
            $('.edit').editable('/home/save', {
                cssClass: 'jeditForm',
                width: 'none',
                height: 'none',
                data: " {'P':'Prichod','O':'Odchod','selected':'O'}",
                type: 'select',
                submit: 'Ok',
                onsubmit: function (settings, original) {
                    oldValue = original.revert;
                },
                submitdata: function () {
                    return {
                        id: $(this).data('id'),
                        PropertyName: $(this).data('propertyname')
                    }
                },
                callback: function (value, settings) {
                    var jsonData = $.parseJSON(value);
                    if (jsonData.status) {
                        $(this).text(jsonData.value);
                    } else {
                        $(this).text(oldValue);
                        alert(jsonData.message);
                    }

                }
            });
            //inline Editing text
            $('.editDate').editable('/home/save', {
                cssClass: 'jeditForm',
                width: 'none',
                height: 'none',
                onsubmit: function (settings, original) {
                    oldValue = original.revert;
                },
                submitdata: function () {
                    return {
                        id: $(this).data('id'),
                        PropertyName: $(this).data('propertyname')
                    }
                },
                callback: function (value, settings) {
                    var jsonData = $.parseJSON(value);
                    if (jsonData.status) {
                        $(this).text(jsonData.value);
                    } else {
                        $(this).text(oldValue);
                        alert(jsonData.message);
                    }

                }
            });
            //Open Okno
            $('#opener').click(function () {
                $('#dialog-modal').dialog("open");
            });
            //styluj
            $('#dialog-modal').dialog({
                resizable: false,
                autoOpen: false,
                height: 250,
                width: 250,
                modal: true,
                show: {
                    effect: "fold",
                    duration: 500
                },
                hide: {
                    effect: "explode",
                    duration: 500
                }
            });

            $('#vytvorNovy').click(function () {
                $('#dialog-modal').dialog('close');
            });
            //delete button

            $('.delButton').on("click",function () {
                var id = $(this).val();
                
                $.ajax({
                    type: 'POST',
                    url:  '/Home/DeleteData',
                    data: "id="+id,                  
                    success: function (data) {
                        if (data.success) {
                            location.reload();
                        }

                    },
                    error: function (result) {
                        if (!success) {
                            alert("Nepodarilo sa odstranit");
                        }
                    }

                });

                });
            });

    </script>
}
